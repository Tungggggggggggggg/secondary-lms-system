"use client";
import { useEffect, useState } from "react";
import { useParams } from "next/navigation";

interface Submission {
  id: string;
  content: string;
  grade?: number;
  feedback?: string;
  submittedAt: string;
  student?: {
    id: string;
    fullname: string;
    email: string;
  };
}

/**
 * Trang ch·∫•m b√†i assignment submissions
 */
export default function AssignmentSubmissionsPage() {
  const params = useParams() as { assignmentId: string };
  const { assignmentId } = params;

  const [submissions, setSubmissions] = useState<Submission[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    async function fetchSubmissions() {
      try {
        setLoading(true);
        setError(null);
        // G·ªçi API submissions (c·∫ßn backend support: /api/assignments/[id]/submissions)
        const res = await fetch(`/api/assignments/${assignmentId}/submissions`);
        const result = await res.json();
        if (!result.success) {
          setError(result.message || "Kh√¥ng l·∫•y ƒë∆∞·ª£c submissions");
          setSubmissions([]);
          console.error('[SubmissionsPage] API tr·∫£ v·ªÅ l·ªói:', result.message);
          return;
        }
        setSubmissions(result.data as Submission[]);
        console.log('[SubmissionsPage] L·∫•y submissions th√†nh c√¥ng:', result.data);
      } catch (err: unknown) {
        let msg = 'L·ªói kh√¥ng x√°c ƒë·ªãnh';
        if (err instanceof Error) msg = err.message;
        setError(msg);
        setSubmissions([]);
        console.error('[SubmissionsPage] L·ªói khi fetch:', err);
      } finally {
        setLoading(false);
      }
    }
    if (assignmentId) fetchSubmissions();
  }, [assignmentId]);

  if (loading) return <div className="py-10 text-center text-gray-500">ƒêang t·∫£i danh s√°ch submissions...</div>;
  if (error) return <div className="py-10 text-center text-red-500">L·ªói: {error}</div>;
  if (!submissions.length) return <div className="py-10 text-center text-gray-400">Ch∆∞a c√≥ h·ªçc sinh n√†o n·ªôp b√†i cho assignment n√†y.</div>;

  return (
    <div className="max-w-3xl mx-auto py-8">
      <h1 className="text-2xl font-bold mb-4">üìù Danh s√°ch b√†i n·ªôp</h1>
      <div className="space-y-6">
        {submissions.map((s) => (
          <div key={s.id} className="bg-white p-6 rounded-2xl shadow flex justify-between items-center">
            <div>
              <div className="font-semibold">{s.student?.fullname || 'Kh√¥ng r√µ t√™n'} ({s.student?.email})</div>
              <div className="text-sm text-gray-500">N·ªôp l√∫c: {new Date(s.submittedAt).toLocaleString()}</div>
              <div className="mt-2 text-gray-800 whitespace-pre-wrap">{s.content}</div>
            </div>
            <div className="text-right">
              <div>
                <span className="font-bold">{s.grade ?? '-'} ƒëi·ªÉm</span>
              </div>
              <div className="text-xs text-gray-400 mt-2">Feedback: {s.feedback || '(ch∆∞a c√≥)'}</div>
              {/* TODO: N√∫t ch·∫•m, c·∫≠p nh·∫≠t ƒëi·ªÉm, feedback... */}
            </div>
          </div>
        ))}
      </div>
    </div>
  );
}
