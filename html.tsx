"use client";

import React from 'react';
import { BookOpen, Clock, Award, TrendingUp, Calendar, CheckCircle, PlayCircle, FileText, Target, Brain, MessageSquare, Star, ChevronRight, BarChart3, Book, PenTool, Users, Sparkles } from 'lucide-react';

// Quick Actions Component
const QuickActions = () => {
  const actions = [
    { icon: 'üìö', label: 'T·∫°o b√†i gi·∫£ng', subtitle: 'Thi·∫øt n·ªôi dung m·ªõi' },
    { icon: 'üè´', label: 'T·∫°o l·ªõp h·ªçc', subtitle: 'M·ªü l·ªõp m·ªõi' },
    { icon: '‚úèÔ∏è', label: 'Giao b√†i t·∫≠p', subtitle: 'T·∫°o assignment' },
    { icon: 'üìä', label: 'Xem b√°o c√°o', subtitle: 'Ph√¢n t√≠ch d·ªØ li·ªáu' },
  ];

  return (
    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
      {actions.map((action, index) => (
        <button
          key={index}
          className="bg-white rounded-2xl p-6 hover:shadow-lg transition-all border border-gray-100 text-left group"
        >
          <div className="text-4xl mb-3">{action.icon}</div>
          <h3 className="font-semibold text-gray-900 mb-1">{action.label}</h3>
          <p className="text-sm text-gray-500">{action.subtitle}</p>
        </button>
      ))}
    </div>
  );
};

// Stats Overview Component
const StatsOverview = () => {
  const stats = [
    { 
      icon: 'üë•', 
      label: 'T·ªïng sinh vi√™n', 
      value: '384', 
      progress: 12,
      progressLabel: 'so v·ªõi th√°ng tr∆∞·ªõc',
      gradient: 'from-blue-500 to-blue-600'
    },
    { 
      icon: 'üéì', 
      label: 'L·ªõp h·ªçc', 
      value: '12', 
      progress: 12,
      progressLabel: 'l·ªõp m·ªõi tu·∫ßn n√†y',
      gradient: 'from-purple-500 to-purple-600'
    },
    { 
      icon: 'üìù', 
      label: 'B√†i t·∫≠p', 
      value: '56', 
      progress: 18,
      progressLabel: 'b√†i m·ªõi th√°ng n√†y',
      gradient: 'from-pink-500 to-pink-600'
    },
    { 
      icon: '‚≠ê', 
      label: 'ƒê√°nh gi√°', 
      value: '28', 
      progress: 11,
      progressLabel: 'c√¢u tr·∫£ l·ªùi ƒëi·ªÉm',
      gradient: 'from-orange-500 to-yellow-500'
    },
  ];

  return (
    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
      {stats.map((stat, index) => (
        <div key={index} className={`bg-gradient-to-br ${stat.gradient} rounded-2xl p-6 text-white shadow-lg`}>
          <div className="flex items-start justify-between mb-4">
            <div className="text-3xl">{stat.icon}</div>
            <div className="bg-white/20 backdrop-blur-sm rounded-lg px-3 py-1 flex items-center gap-1">
              <span className="text-xs font-semibold">{stat.progress}%</span>
            </div>
          </div>
          <h3 className="text-3xl font-bold mb-1">{stat.value}</h3>
          <p className="text-sm opacity-90">{stat.label}</p>
          <p className="text-xs opacity-75 mt-1">{stat.progressLabel}</p>
        </div>
      ))}
    </div>
  );
};

// Recent Classes Component
const RecentClasses = () => {
  const classes = [
    { 
      subject: 'L·ªãch s·ª≠ 8A1', 
      grade: '8 h·ªçc sinh',
      time: 'Th·ª© 2, 4, 6',
      schedule: '7:00 - 8:30',
      status: 'ƒêang ho·∫°t ƒë·ªông',
      statusColor: 'bg-green-100 text-green-700',
      remaining: '5 b√†i ch∆∞a ch·∫•m',
      color: 'bg-yellow-500',
      icon: 'üìö'
    },
    { 
      subject: 'ƒê·ªãa l√Ω 9D2', 
      grade: '32 h·ªçc sinh',
      time: 'Th·ª© 3, 5, 7',
      schedule: '8:00 - 10:30',
      status: 'ƒêang ho·∫°t ƒë·ªông',
      statusColor: 'bg-green-100 text-green-700',
      remaining: 'L·ªõp 5C 09/27',
      color: 'bg-teal-500',
      icon: 'üåç'
    },
    { 
      subject: 'Ti·∫øng Anh 7C', 
      grade: '35 h·ªçc sinh',
      time: 'Th·ª© 2, 4, 6',
      schedule: '13:00 - 14:30',
      status: 'ƒêang ho·∫°t ƒë·ªông',
      statusColor: 'bg-green-100 text-green-700',
      remaining: '2 b√†i ch∆∞a ch·∫•m',
      color: 'bg-blue-500',
      icon: 'üá¨üáß'
    },
  ];

  return (
    <div className="bg-white rounded-2xl p-6 border border-gray-100">
      <div className="flex items-center justify-between mb-6">
        <h2 className="text-lg font-bold text-gray-900 flex items-center gap-2">
          <span>üè´</span> L·ªõp h·ªçc g·∫ßn ƒë√¢y
        </h2>
        <button className="text-sm text-blue-600 hover:text-blue-700 font-medium">
          Xem t·∫•t c·∫£ ‚Üí
        </button>
      </div>
      
      <div className="space-y-4">
        {classes.map((cls, index) => (
          <div key={index} className="border border-gray-200 rounded-xl p-4 hover:shadow-md transition-all">
            <div className="flex items-start justify-between mb-3">
              <div className="flex items-start gap-3 flex-1">
                <div className={`${cls.color} text-white w-12 h-12 rounded-lg flex items-center justify-center text-xl font-bold`}>
                  {cls.icon}
                </div>
                <div className="flex-1">
                  <h3 className="font-bold text-gray-900 mb-1">{cls.subject}</h3>
                  <p className="text-sm text-gray-600 mb-2">{cls.grade}</p>
                  <div className="flex items-center gap-4 text-xs text-gray-500">
                    <span className="flex items-center gap-1">
                      üìÖ {cls.time}
                    </span>
                    <span className="flex items-center gap-1">
                      ‚è∞ {cls.schedule}
                    </span>
                  </div>
                </div>
              </div>
              <div className="text-right">
                <span className={`${cls.statusColor} text-xs font-medium px-3 py-1 rounded-full`}>
                  {cls.status}
                </span>
                <p className="text-xs text-gray-500 mt-2">{cls.remaining}</p>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};

// Performance Chart Component
const PerformanceChart = () => {
  const subjects = [
    { name: 'L·ªãch s·ª≠', subtitle: 'Chi·∫øn tranh th·∫ø gi·ªõi l·∫ßn 2', progress: 92, color: 'bg-yellow-500' },
    { name: 'ƒê·ªãa l√Ω', subtitle: 'Ch√¢u √Å v√† ch√¢u M·ªπ', progress: 88, color: 'bg-green-500' },
    { name: 'Ti·∫øng Anh', subtitle: 'Th√¨ hi·ªán t·∫°i ho√†n th√†nh', progress: 85, color: 'bg-blue-500' },
  ];

  return (
    <div className="bg-white rounded-2xl p-6 border border-gray-100">
      <div className="flex items-center justify-between mb-6">
        <h2 className="text-lg font-bold text-gray-900 flex items-center gap-2">
          <span>üìà</span> Hi·ªáu su·∫•t gi·∫£ng d·∫°y
        </h2>
      </div>
      
      <div className="space-y-6">
        {subjects.map((subject, index) => (
          <div key={index}>
            <div className="flex items-center justify-between mb-2">
              <div>
                <h3 className="font-semibold text-gray-900">{subject.name}</h3>
                <p className="text-sm text-gray-500">{subject.subtitle}</p>
              </div>
              <span className="text-lg font-bold text-gray-900">{subject.progress}%</span>
            </div>
            <div className="w-full bg-gray-200 rounded-full h-3">
              <div 
                className={`${subject.color} h-3 rounded-full transition-all`}
                style={{ width: `${subject.progress}%` }}
              />
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};

// Upcoming Tasks Component
const UpcomingTasks = () => {
  type PriorityType = 'KH·∫®N C·∫§P' | 'QUAN TR·ªåNG' | 'B√åNH TH∆Ø·ªúNG';
  
  const tasks = [
    { priority: 'KH·∫®N C·∫§P' as PriorityType, label: 'Ch·∫•m b√†i ki·ªÉm tra gi·ªØa k·ª≥', time: 'L·ªãch s·ª≠ 8A2 - 12 b√†i', status: 'H√¥m nay' },
    { priority: 'QUAN TR·ªåNG' as PriorityType, label: 'H·ªçp ph·ª• huynh tr·ª±c tuy·∫øn', time: 'L·ªõp 9D2 - 13:00', status: 'Mai' },
    { priority: 'B√åNH TH∆Ø·ªúNG' as PriorityType, label: 'T·∫°o b√†i gi·∫£ng m·ªõi', time: 'ƒê·ªãa l√Ω - Ch∆∞∆°ng 3', status: 'T7' },
  ];

  const priorityColors: Record<PriorityType, string> = {
    'KH·∫®N C·∫§P': 'bg-red-100 text-red-700 border-red-200',
    'QUAN TR·ªåNG': 'bg-orange-100 text-orange-700 border-orange-200',
    'B√åNH TH∆Ø·ªúNG': 'bg-blue-100 text-blue-700 border-blue-200'
  };

  return (
    <div className="bg-white rounded-2xl p-6 border border-gray-100">
      <div className="flex items-center justify-between mb-6">
        <h2 className="text-lg font-bold text-gray-900 flex items-center gap-2">
          <span>üìã</span> C√¥ng vi·ªác s·∫Øp t·ªõi
        </h2>
      </div>
      
      <div className="space-y-3">
        {tasks.map((task, index) => (
          <div key={index} className={`border rounded-xl p-4 ${priorityColors[task.priority]}`}>
            <div className="flex items-start justify-between mb-2">
              <span className="text-xs font-bold">{task.priority}</span>
              <span className="text-xs font-medium">{task.status}</span>
            </div>
            <h3 className="font-semibold text-gray-900 mb-1">{task.label}</h3>
            <p className="text-sm opacity-75">{task.time}</p>
          </div>
        ))}
      </div>
    </div>
  );
};

// Recent Activity Component
const RecentActivity = () => {
  const activities = [
    { 
      user: 'Nguy·ªÖn Minh Anh', 
      action: 'n·ªôp b√†i t·∫≠p ƒê·ªãa l√Ω',
      time: 'Ti·∫øng Anh 7C - 1 gi·ªù tr∆∞·ªõc',
      avatar: 'bg-blue-500'
    },
    { 
      user: 'Tr·∫ßn Thanh T√¢m', 
      action: 'h·ªèi v·ªÅ ch√≠nh √¢m ƒë·ªãa ch·ªânh',
      time: 'ƒê·ªãa l√Ω 9D2 - 2 gi·ªù tr∆∞·ªõc',
      avatar: 'bg-pink-500'
    },
    { 
      user: 'L√™ Ho√†ng', 
      action: 'ƒëƒÉng k√Ω l·ªõp',
      time: 'Ti·∫øng Anh 7C - 3 gi·ªù tr∆∞·ªõc',
      avatar: 'bg-green-500'
    },
  ];

  return (
    <div className="bg-white rounded-2xl p-6 border border-gray-100">
      <div className="flex items-center justify-between mb-6">
        <h2 className="text-lg font-bold text-gray-900 flex items-center gap-2">
          <span>‚ö°</span> Ho·∫°t ƒë·ªông g·∫ßn ƒë√¢y
        </h2>
      </div>
      
      <div className="space-y-4">
        {activities.map((activity, index) => (
          <div key={index} className="flex items-start gap-3">
            <div className={`${activity.avatar} w-10 h-10 rounded-full flex items-center justify-center text-white font-bold text-sm`}>
              {activity.user.charAt(0)}
            </div>
            <div className="flex-1">
              <p className="text-sm text-gray-900">
                <span className="font-semibold">{activity.user}</span> {activity.action}
              </p>
              <p className="text-xs text-gray-500 mt-1">{activity.time}</p>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};

// Weekly Goals Component
const WeeklyGoals = () => {
  return (
    <div className="bg-gradient-to-br from-purple-500 via-purple-600 to-pink-500 rounded-2xl p-6 text-white">
      <div className="flex items-center justify-between mb-6">
        <h2 className="text-lg font-bold flex items-center gap-2">
          <span>üéØ</span> M·ª•c ti√™u tu·∫ßn n√†y
        </h2>
        <span className="text-sm font-semibold bg-white/20 backdrop-blur-sm px-3 py-1 rounded-full">
          28/32
        </span>
      </div>
      
      <div className="space-y-4">
        <div>
          <div className="flex items-center justify-between mb-2 text-sm">
            <span>Ch·∫•m b√†i t·∫≠p</span>
            <span className="font-semibold">3/3</span>
          </div>
          <div className="w-full bg-white/20 rounded-full h-2">
            <div className="bg-white h-2 rounded-full" style={{ width: '100%' }} />
          </div>
        </div>

        <div>
          <div className="flex items-center justify-between mb-2 text-sm">
            <span>T·∫°o b√†i gi·∫£ng m·ªõi</span>
            <span className="font-semibold">3/4</span>
          </div>
          <div className="w-full bg-white/20 rounded-full h-2">
            <div className="bg-white h-2 rounded-full" style={{ width: '75%' }} />
          </div>
        </div>

        <div>
          <div className="flex items-center justify-between mb-2 text-sm">
            <span>Ph·∫£n h·ªìi ph·ª• huynh</span>
            <span className="font-semibold">13/15</span>
          </div>
          <div className="w-full bg-white/20 rounded-full h-2">
            <div className="bg-white h-2 rounded-full" style={{ width: '87%' }} />
          </div>
        </div>

        <div className="bg-white/10 backdrop-blur-sm rounded-lg p-3 mt-4 flex items-center gap-3">
          <div className="text-2xl">üî•</div>
          <div>
            <p className="font-semibold text-sm">Streak 15 ng√†y!</p>
            <p className="text-xs opacity-90">B·∫°n ƒë√£ d·∫°y 15 ng√†y li√™n ti·∫øp</p>
          </div>
        </div>
      </div>
    </div>
  );
};

// Recent Content Component
const RecentContent = () => {
  const content = [
    { 
      subject: 'L·ªãch s·ª≠',
      title: 'Chi·∫øn tranh Vi·ªát Nam 1945-1975',
      subtitle: 'T·ªïng quan chi·∫øn tranh, nh·ªØng nh√¢n v·∫≠t ch·ªß th·ªÉ x√£ h·ªôi',
      views: '1,234 l∆∞·ª£t xem',
      duration: '25 Ph√∫t',
      lessons: '8 B√†i h·ªçc',
      icon: 'üìö',
      color: 'bg-yellow-500'
    },
    { 
      subject: 'ƒê·ªãa l√Ω',
      title: 'Kh√≠ h·∫≠u ƒê√¥ng Nam √Å',
      subtitle: 'ƒê·∫∑c ƒëi·ªÉm kh√≠ h·∫≠u nhi·ªát ƒë·ªõi gi√≥ m√πa c·ªßa Vi·ªát Nam v√† c√°c n∆∞·ªõc',
      views: '856 l∆∞·ª£t xem',
      duration: '18 Ph√∫t',
      lessons: '5 B√†i h·ªçc',
      icon: 'üåç',
      color: 'bg-teal-500'
    },
    { 
      subject: 'Ti·∫øng Anh',
      title: 'Present Perfect Tense',
      subtitle: 'C√°ch s·ª≠ d·ª•ng v√† b√†i t·∫≠p th·ª±c h√†nh th√¨ hi·ªán t·∫°i ho√†n th√†nh',
      views: '2,145 l∆∞·ª£t xem',
      duration: '42 Ph√∫t',
      lessons: '12 B√†i h·ªçc',
      icon: 'üá¨üáß',
      color: 'bg-blue-500'
    },
  ];

  return (
    <div className="bg-white rounded-2xl p-6 border border-gray-100">
      <div className="flex items-center justify-between mb-6">
        <h2 className="text-lg font-bold text-gray-900 flex items-center gap-2">
          <span>üìö</span> Th∆∞ vi·ªán n·ªôi dung g·∫ßn ƒë√¢y
        </h2>
        <button className="text-sm text-blue-600 hover:text-blue-700 font-medium">
          Xem t·∫•t c·∫£ ‚Üí
        </button>
      </div>
      
      <div className="grid md:grid-cols-3 gap-6">
        {content.map((item, index) => (
          <div key={index} className="border border-gray-200 rounded-xl overflow-hidden hover:shadow-lg transition-all group">
            <div className={`${item.color} h-32 flex items-center justify-center text-6xl`}>
              {item.icon}
            </div>
            <div className="p-4">
              <span className="text-xs font-semibold text-blue-600 bg-blue-50 px-2 py-1 rounded">
                {item.subject}
              </span>
              <h3 className="font-bold text-gray-900 mt-2 mb-1 group-hover:text-blue-600 transition-colors">
                {item.title}
              </h3>
              <p className="text-sm text-gray-600 mb-3 line-clamp-2">{item.subtitle}</p>
              <div className="flex items-center gap-4 text-xs text-gray-500 mb-2">
                <span>üëÅÔ∏è {item.views}</span>
                <span>‚è±Ô∏è {item.duration}</span>
              </div>
              <div className="text-xs text-gray-500">
                üìñ {item.lessons}
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};

// Achievements Component
const Achievements = () => {
  return (
    <div className="bg-gradient-to-r from-yellow-400 via-orange-400 to-red-400 rounded-2xl p-8 text-center text-white">
      <div className="text-6xl mb-4">üèÜ</div>
      <h2 className="text-2xl font-bold mb-2">Th√†nh t√≠ch n·ªïi b·∫≠t!</h2>
      <p className="mb-6 opacity-90">B·∫°n ƒë√£ ƒë·∫°t ƒë∆∞·ª£c nh·ªØng m·ª•c ti√™u xu·∫•t s·∫Øc!</p>
      
      <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
        <div className="bg-white/20 backdrop-blur-sm rounded-xl p-4">
          <div className="text-3xl mb-2">üìö</div>
          <h3 className="font-bold text-sm mb-1">Top Educator</h3>
          <p className="text-xs opacity-90">500 b√†i gi·∫£ng</p>
        </div>
        <div className="bg-white/20 backdrop-blur-sm rounded-xl p-4">
          <div className="text-3xl mb-2">‚≠ê</div>
          <h3 className="font-bold text-sm mb-1">Si√™u b√†i gi·∫£ng</h3>
          <p className="text-xs opacity-90">100k+ l∆∞·ª£t xem</p>
        </div>
        <div className="bg-white/20 backdrop-blur-sm rounded-xl p-4">
          <div className="text-3xl mb-2">üíØ</div>
          <h3 className="font-bold text-sm mb-1">100% Ho√†n th√†nh</h3>
          <p className="text-xs opacity-90">T·∫•t c·∫£ b√†i t·∫≠p</p>
        </div>
        <div className="bg-white/20 backdrop-blur-sm rounded-xl p-4">
          <div className="text-3xl mb-2">üî•</div>
          <h3 className="font-bold text-sm mb-1">15 Ng√†y Streak</h3>
          <p className="text-xs opacity-90">D·∫°y li√™n t·ª•c</p>
        </div>
      </div>
    </div>
  );
};

// Main Dashboard Component
export default function StudentDashboard() {
  return (
    <div className="min-h-screen bg-gradient-to-br from-purple-50 via-pink-50 to-orange-50 p-8 space-y-8">
      <div className="max-w-7xl mx-auto space-y-8">
        {/* Header */}
        <div>
          <h1 className="text-3xl font-bold text-gray-900 mb-2 flex items-center gap-2">
            Ch√†o m·ª´ng tr·ªü l·∫°i! üëã
          </h1>
          <p className="text-gray-600">H√¥m nay l√† Th·ª© S√°u, 24 th√°ng 10, 2025</p>
        </div>

        <QuickActions />
        <StatsOverview />

        <div className="grid lg:grid-cols-3 gap-8">
          <div className="lg:col-span-2 space-y-8">
            <RecentClasses />
            <PerformanceChart />
          </div>

          <div className="space-y-8">
            <UpcomingTasks />
            <RecentActivity />
            <WeeklyGoals />
          </div>
        </div>

        <RecentContent />
        <Achievements />
      </div>
    </div>
  );
}